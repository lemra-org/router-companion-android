# Build
name: Build
on:
  pull_request:
    branches: [main]
  pull_request_target:
    branches: [main]
  push:
    branches: [main]
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    # This allows Dependabot PRs to have access to the repository Secrets,
    # but using the Workflows in the context of the base branch
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Prerequisites
        env:
          APP_GOOGLE_SERVICES_JSON: ${{ secrets.APP_GOOGLE_SERVICES_JSON }}
          TASKER_PLUGIN_GOOGLE_SERVICES_JSON: ${{ secrets.TASKER_PLUGIN_GOOGLE_SERVICES_JSON }}
        run: |
          echo "${APP_GOOGLE_SERVICES_JSON}" > app/google-services.json
          echo "${TASKER_PLUGIN_GOOGLE_SERVICES_JSON}" > tasker-plugin/google-services.json

      - name: Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          # Only write to the cache for builds on the 'main' branch.
          # Builds on other branches will only read existing entries from the cache.
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: testDevDebugUnitTest

  reports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Unit Tests
        uses: gradle/gradle-build-action@v2
        with:
          # Only write to the cache for builds on the 'main' branch.
          # Builds on other branches will only read existing entries from the cache.
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: htmlDependencyReport

  assemble:
    strategy:
      fail-fast: false
      matrix:
        app: [ app, tasker-plugin ]
    runs-on: ubuntu-latest

    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    # This allows Dependabot PRs to have access to the repository Secrets,
    # but using the Workflows in the context of the base branch
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Prerequisites
        env:
          APP_GOOGLE_SERVICES_JSON: ${{ secrets.APP_GOOGLE_SERVICES_JSON }}
          TASKER_PLUGIN_GOOGLE_SERVICES_JSON: ${{ secrets.TASKER_PLUGIN_GOOGLE_SERVICES_JSON }}
        run: |
          if [[ "${{ matrix.app }}" == "app" ]]; then
            export envVarValue="${APP_GOOGLE_SERVICES_JSON}"
          elif [[ "${{ matrix.app }}" == "tasker-plugin" ]]; then
            export envVarValue="${TASKER_PLUGIN_GOOGLE_SERVICES_JSON}"
          else
            echo "Unsupported value for 'matrix.app': ${{ matrix.app }}"
            exit 1
          fi
          echo "${envVarValue}" > ${{ matrix.app }}/google-services.json

      - name: Assemble ${{ matrix.app }}
        uses: gradle/gradle-build-action@v2
        with:
          # Only write to the cache for builds on the 'main' branch.
          # Builds on other branches will only read existing entries from the cache.
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          arguments: :${{ matrix.app }}:assembleDevDebug
